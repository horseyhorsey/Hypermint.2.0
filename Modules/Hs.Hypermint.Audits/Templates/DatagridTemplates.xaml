<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:prism="http://www.codeplex.com/prism"
                    xmlns:base1="clr-namespace:Hypermint.Base.Converters;assembly=Hypermint.Base">

    <base1:BoolToVisibility x:Key="BoolToVisConverter"/>

    <base1:NegateBooleanConverter x:Key="NegateBoolConverter"/>

    <!--HYPERSPIN AUDIT-->
    <ControlTemplate x:Key="DatabaseAuditBaseGrid">
        <DataGrid x:Name="DatabaseGrid" AutoGenerateColumns="False"  IsReadOnly="True" 
                       IsSynchronizedWithCurrentItem="True" 
                       SelectionMode="Single" SelectionUnit="FullRow"
                       BorderBrush="{DynamicResource AccentColorBrush}"
                       SelectedItem="{Binding SelectedGame, UpdateSourceTrigger=PropertyChanged}"
                       ItemsSource="{Binding GamesList, UpdateSourceTrigger=PropertyChanged}"
                       BorderThickness="3" VerticalAlignment="Stretch">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentCellChanged">
                    <prism:InvokeCommandAction 
                            Command="{Binding CurrentCellChanged}" 
                            CommandParameter="{Binding CurrentColumn,
                            ElementName=DatabaseGrid,UpdateSourceTrigger=PropertyChanged}">
                    </prism:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=RomName}" />
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander>
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=RomName}" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.Columns >
                <DataGridTextColumn Header="Romname" Binding="{Binding RomName}"/>
                <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                <DataGridTextColumn Header="Wheel" Binding="{Binding HaveWheel}"/>
                <DataGridTextColumn Header="Artwork1" Binding="{Binding  HaveArt1}"/>
                <DataGridTextColumn Header="Artwork2" Binding="{Binding  HaveArt2,UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Artwork3" Binding="{Binding  HaveArt3}"/>
                <DataGridTextColumn Header="Artwork4" Binding="{Binding  HaveArt4}"/>
                <DataGridTextColumn Header="Videos" Binding="{Binding  HaveVideo}"/>
                <DataGridTextColumn Header="Theme" Binding="{Binding  HaveTheme}"/>
                <DataGridTextColumn Header="Backgrounds" Binding="{Binding HaveBackground}"/>
                <DataGridTextColumn Header="MusicBg" Binding="{Binding HaveBGMusic}"/>

                <!--MAIN MENU-->
                <!--<DataGridTextColumn Header="Sound Click" Binding="{Binding HaveS_Click}" Visibility="{Binding IsMainMenu}"/>
                <DataGridTextColumn Header="Wheel Sounds" Binding="{Binding HaveS_Wheel}"/>
                <DataGridTextColumn Header="Letters" Binding="{Binding HaveLetters}"/>
                <DataGridTextColumn Header="Special" Binding="{Binding HaveSpecial}"/>
                <DataGridTextColumn Header="GenreBg" Binding="{Binding HaveGenreBG}"/>
                <DataGridTextColumn Header="GenreWheel" Binding="{Binding HaveGenreWheel}"/>
                <DataGridTextColumn Header="Pointer" Binding="{Binding HavePointer}"
                                    Visibility="{Binding IsntMainMenu, Converter={StaticResource BoolToVisConverter}}"
                                    />-->
            </DataGrid.Columns>
        </DataGrid>
    </ControlTemplate>

    <!--HYPERSPIN MAIN MENU AUDIT-->
    <ControlTemplate x:Key="DatabaseMainMenuAuditBaseGrid">
        <DataGrid x:Name="DatabaseGrid" AutoGenerateColumns="False"  IsReadOnly="True" 
                       IsSynchronizedWithCurrentItem="True" 
                       SelectionMode="Single" SelectionUnit="FullRow"
                       BorderBrush="{DynamicResource AccentColorBrush}"
                       SelectedItem="{Binding SelectedGame, UpdateSourceTrigger=PropertyChanged}"
                       ItemsSource="{Binding GamesList, UpdateSourceTrigger=PropertyChanged}"
                       BorderThickness="3" VerticalAlignment="Stretch">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentCellChanged">
                    <prism:InvokeCommandAction 
                            Command="{Binding CurrentCellChanged}" 
                            CommandParameter="{Binding CurrentColumn,
                            ElementName=DatabaseGrid,UpdateSourceTrigger=PropertyChanged}">
                    </prism:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=RomName}" />
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander>
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=RomName}" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.Columns >
                <DataGridTextColumn Header="Romname" Binding="{Binding RomName}"/>

                <!--MAIN MENU-->
                <DataGridTextColumn Header="Wheel" Binding="{Binding HaveWheel}"/>
                <DataGridTextColumn Header="Videos" Binding="{Binding  HaveVideo}"/>
                <DataGridTextColumn Header="Sound Click" Binding="{Binding HaveWheelClick}"/>
                <DataGridTextColumn Header="Wheel Sounds" Binding="{Binding HaveS_Wheel}"/>
                <DataGridTextColumn Header="Sound Start"  Binding="{Binding HaveS_Start}">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                       ToolTip="A random mp3 is played when the system is opened in Hyperspin"/>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Sound End" Binding="{Binding HaveS_Exit}">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" ToolTip="A random mp3 is played when the system ends."/>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Letters" Binding="{Binding HaveLetters}"/>
                <DataGridTextColumn Header="Special" Binding="{Binding HaveSpecial}"/>
                <DataGridTextColumn Header="GenreBg" Binding="{Binding HaveGenreBG}"/>
                <DataGridTextColumn Header="GenreWheel" Binding="{Binding HaveGenreWheel}"/>
                <DataGridTextColumn Header="Pointer" Binding="{Binding HavePointer}"/>
            </DataGrid.Columns>
        </DataGrid>
    </ControlTemplate>

    <ControlTemplate x:Key="RlDefaultDg">
        <!--RL Defaults AUDIT-->
        <DataGrid x:Name="DatabaseGrid" AutoGenerateColumns="False"  IsReadOnly="True" 
                       IsSynchronizedWithCurrentItem="True" 
                       SelectionMode="Single" SelectionUnit="FullRow"
                       BorderBrush="{DynamicResource AccentColorBrush}"                       
                       ItemsSource="{Binding DefaultFolders, UpdateSourceTrigger=PropertyChanged}"
                       BorderThickness="3" VerticalAlignment="Stretch">

            <!--SelectedItem="{Binding SelectedGame, UpdateSourceTrigger=PropertyChanged}"-->

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentCellChanged">
                    <prism:InvokeCommandAction 
                            Command="{Binding CurrentCellChanged}" 
                            CommandParameter="{Binding CurrentColumn,
                            ElementName=DatabaseGrid,UpdateSourceTrigger=PropertyChanged}">
                    </prism:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Path=RomName}" />
                            </StackPanel>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander>
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=RomName}" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>

            <DataGrid.Columns >
                <DataGridTextColumn Header="Artwork" Binding="{Binding HaveArtwork}"/>
                <DataGridTextColumn Header="Background" Binding="{Binding HaveBackgrounds}"/>
                <DataGridTextColumn Header="Bezels" Binding="{Binding HaveBezels}"/>
                <DataGridTextColumn Header="Bezel Bg" Binding="{Binding HaveBezelBg}"/>
                <DataGridTextColumn Header="Controller" Binding="{Binding HaveController}"/>
                <DataGridTextColumn Header="Fade" Binding="{Binding HaveFadeLayer1}"/>
                <DataGridTextColumn Header="MultiGame" Binding="{Binding HaveMultiGame}"/>
                <DataGridTextColumn Header="Music" Binding="{Binding HaveMusic}"/>
                <DataGridTextColumn Header="Video" Binding="{Binding HaveVideo}"/>
                <DataGridTextColumn Header="Wheels" Binding="{Binding HaveWheel}"/>
            </DataGrid.Columns>

        </DataGrid>
    </ControlTemplate>


</ResourceDictionary>