<UserControl x:Class="Hs.Hypermint.Audits.Views.RlBezelAuditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" xmlns:prism="http://prismlibrary.com/" prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style TargetType="{x:Type DataGridCell}">
            <Style.Triggers>
                <DataTrigger 
                    Binding="{Binding RelativeSource={RelativeSource Self},Path=Content.Text}" 
                     Value="True">
                    <Setter Property="Background" Value="#263DDE36"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Content.Text}"
                             Value="False">
                    <Setter Property="Background" Value="#26FF5454"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="LayoutRoot" IsEnabled="{Binding IsBusy, Converter={StaticResource NegateBoolConverter}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="65"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <DataGrid x:Name="DatabaseGridDefault" Grid.Row="0" 
                  BorderThickness="4" AutoGenerateColumns="False" 
                  IsSynchronizedWithCurrentItem="True" 
                  IsReadOnly="True" SelectionMode="Single" SelectionUnit="Cell"
                  ItemsSource="{Binding AuditListDefaults}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentCellChanged">
                    <prism:InvokeCommandAction 
                            Command="{Binding CurrentCellChanged}" 
                            CommandParameter="{Binding CurrentColumn,
                            ElementName=DatabaseGridDefault,UpdateSourceTrigger=PropertyChanged}">
                    </prism:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.Columns>
                <DataGridTextColumn Header="Bezels" Binding="{Binding RomName}" SortDirection="Ascending">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="5"/>
                                <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="20" Width="20" HorizontalAlignment="Left" 
                                        ToolTip="Check Bezels folders" 
                                        CommandParameter="Bezels" Command="{Binding ElementName=DatabaseGridDefault, Path=DataContext.OpenScanRocketMediaFolderCommand}">
                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_reset}"/>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Bezel" Binding="{Binding HaveBezels}"/>
                <DataGridTextColumn Header="BezelBg" Binding="{Binding HaveBezelBg}"/>
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid x:Name="DatabaseGridMainMenu"  Grid.Row="1" BorderThickness="2"
                  AutoGenerateColumns="False" IsReadOnly="True" 
                   IsSynchronizedWithCurrentItem="True"
                   SelectionMode="Single" 
                  ItemsSource="{Binding GamesList}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentCellChanged">
                    <prism:InvokeCommandAction 
                            Command="{Binding CurrentCellChanged}" 
                            CommandParameter="{Binding CurrentColumn,
                            ElementName=DatabaseGridMainMenu,UpdateSourceTrigger=PropertyChanged}">
                    </prism:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <DataGrid.Columns>
                <DataGridTextColumn Header="RomName" Binding="{Binding RomName}"/>
                <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                <DataGridTextColumn Header="Bezel" Binding="{Binding HaveBezels}"/>
                <DataGridTextColumn Header="BezelBg" Binding="{Binding HaveBezelBg}"/>
                <DataGridTextColumn Header="Cards" Binding="{Binding HaveCards}"/>

            </DataGrid.Columns>
        </DataGrid>

        <DockPanel Grid.Row="2">
            <Button  Command="{Binding ScanRlMediaCommand}" Style="{DynamicResource MetroCircleButtonStyle}"
                Height="40" Width="40" HorizontalAlignment="Left"
                ToolTip="Scan bezels &amp; instruction cards" IsEnabled="{Binding ScanEnabled}">
                <Rectangle Width="15" Height="15"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_reset}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>

            <Button  Command="{Binding BezelEditCommand}" IsEnabled="False" Style="{DynamicResource MetroCircleButtonStyle}"
                Height="40" Width="40" HorizontalAlignment="Left"
                ToolTip="Edit selected bezel">
                <Rectangle Width="15" Height="15"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_tv}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
        </DockPanel>
    </Grid>
</UserControl>
