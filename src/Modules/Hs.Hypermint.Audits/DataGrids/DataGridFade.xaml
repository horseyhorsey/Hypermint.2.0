<UserControl x:Class="Hs.Hypermint.Audits.DataGrids.DataGridFade"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Hs.Hypermint.Audits.DataGrids"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:prism="http://prismlibrary.com/"   
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="65"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <DataGrid x:Name="DatabaseGridDefault"  Grid.Row="0" BorderThickness="2" AutoGenerateColumns="False" IsReadOnly="True" 
                   IsSynchronizedWithCurrentItem="True"
                   SelectionMode="Single" 
                  ItemsSource="{Binding AuditListDefaults}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentCellChanged">
                    <prism:InvokeCommandAction 
                            Command="{Binding CurrentCellChanged}" 
                            CommandParameter="{Binding CurrentColumn,
                            ElementName=DatabaseGridDefault,UpdateSourceTrigger=PropertyChanged}">
                    </prism:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Fade" Binding="{Binding RomName}">
                    <DataGridTextColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" >
                                <TextBlock Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="5"/>
                                <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="20" Width="20" HorizontalAlignment="Left" 
                                        ToolTip="Check Fade folders" Command="{Binding ElementName=DatabaseGridDefault,Path=DataContext.OpenScanRocketMediaFolderCommand}" CommandParameter="Fade">
                                    <Rectangle Width="15" Height="15" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_reset}"/>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTextColumn.HeaderTemplate>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Layer 1" Binding="{Binding HaveFadeLayer1}" />
                <DataGridTextColumn Header="Layer 2" Binding="{Binding HaveFadeLayer2}"/>
                <DataGridTextColumn Header="Layer 3" Binding="{Binding HaveFadeLayer3}"/>
                <DataGridTextColumn Header="Layer 4" Binding="{Binding HaveFadeLayer4}"/>
                <DataGridTextColumn Header="Info Bar" Binding="{Binding HaveInfoBar}"/>
                <DataGridTextColumn Header="Progress Bar" Binding="{Binding HaveProgressBar}"/>
                <DataGridTextColumn Header="7z extracting" Binding="{Binding Have7zExtract}"/>
                <DataGridTextColumn Header="7z complete" Binding="{Binding Have7zComplete}"/>
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid x:Name="DatabaseGridMainMenu"  Grid.Row="1" BorderThickness="2" AutoGenerateColumns="False" IsReadOnly="True" 
                   IsSynchronizedWithCurrentItem="True"
                   SelectionMode="Single" 
                  ItemsSource="{Binding AuditList}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="CurrentCellChanged">
                    <prism:InvokeCommandAction 
                            Command="{Binding CurrentCellChanged}" 
                            CommandParameter="{Binding CurrentColumn,
                            ElementName=DatabaseGridMainMenu,UpdateSourceTrigger=PropertyChanged}">
                    </prism:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="RomName" Binding="{Binding RomName}"/>
                <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                <DataGridTextColumn Header="Layer 1" Binding="{Binding HaveFadeLayer1}" />
                <DataGridTextColumn Header="Layer 2" Binding="{Binding HaveFadeLayer2}"/>
                <DataGridTextColumn Header="Layer 3" Binding="{Binding HaveFadeLayer3}"/>
                <DataGridTextColumn Header="Extra Layer 1" Binding="{Binding HaveExtraLayer1}"/>
                <!--<DataGridTextColumn Header="Backgrounds" Binding="{Binding HaveBackgrounds}" />-->
            </DataGrid.Columns>
        </DataGrid>

        <DockPanel Grid.Row="2">
        <Button Command="{Binding FadeScanCommand}" Style="{DynamicResource MetroCircleButtonStyle}"
                Height="40" Width="40" HorizontalAlignment="Left"
                ToolTip="Scan fade layers" IsEnabled="{Binding ScanEnabled}">
            <Rectangle Width="15" Height="15"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_reset}"/>
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>

            <Button Command="{Binding LaunchRlMode}" CommandParameter="Fade"
                    Style="{DynamicResource MetroCircleButtonStyle}"
                Height="40" Width="40" HorizontalAlignment="Left"
                ToolTip="Test rocketlaunch fade" IsEnabled="{Binding ScanEnabled}">
            <Rectangle Width="15" Height="15"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                    <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_image}"/>
                </Rectangle.OpacityMask>
            </Rectangle>
        </Button>

            <Button Command="{Binding LaunchRlMode}" CommandParameter="Fade7z"
                    Style="{DynamicResource MetroCircleButtonStyle}"
                Height="40" Width="40" HorizontalAlignment="Left"
                ToolTip="Test rocketlaunch fade 7z" IsEnabled="{Binding ScanEnabled}">
                <Rectangle Width="15" Height="15"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_image}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>

            <Button Command="{Binding OpenFolderCommand}"
                    Style="{DynamicResource MetroCircleButtonStyle}"
                Height="40" Width="40" HorizontalAlignment="Left"
                ToolTip="Open games fade folder.">
                <Rectangle Width="15" Height="15"
                       Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_folder}"/>
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>

        </DockPanel>
    </Grid>
</UserControl>
